CKEDITOR.dialog.add( 'mathjaxDialog', function( editor ) {
    return {
        title : 'Math Input Dialog',
        minWidth : 400,
        minHeight : 200,
        contents: [
            {
                id: 'input-tab',
                label: 'Math Input',
                elements:[
                    {  //input element for the width
                        type: 'textarea',
                        id: 'mathInput',
                        label: 'Eingabefenster f&uuml;r LaTeX-Quelltext',
                        setup: function( element ) {
                            this.setValue( element.getText() )
                        },
                        commit: function( element ) {
                            element.setText( this.getValue() )
                        }
                    }, {
                        type: 'html',
                        html: '<b>Vorschau</b><div id="math-live-preview"></div>',
                        setup: function (element) {
                            var textarea = editor.document.getElementsByTag("textarea")
                            editor.document.getById("math-live-preview").setText("") // clear preview
                            // register live-preview handler
                            if (textarea) {
                                var t = textarea.$[0]
                                t.onkeyup = function(e) {
                                    console.log("user is typing tex: ")
                                    var preview = editor.document.getById("math-live-preview")
                                    preview.setText(t.value)
                                    MathJax.Hub.Queue(["Typeset", MathJax.Hub, "math-live-preview"])
                                }
                            }
                        }
                    }
                ]
            }
        ], onLoad: function() {
            console.log("onLoad..")
            // initial pop-up
            this.setupContent(editor.document.createText("$$  $$"))
        }, onShow: function() {
            var selection = editor.getSelection()
            var element = selection.getStartElement()
            var latexSource = undefined // this is what we need to edit this math-formula
            // find our ascendant math-output/div container
            if ( element ) {
                var mathjaxDiv = element.getAscendant('div')
                // here we have the output container generated by mathjax at hand
                if ( mathjaxDiv ) {
                    // truncate ID from DOM Element works with (MathJax 2.0)
                    var mathjaxId = mathjaxDiv.$.firstChild.id.replace('-Frame', '')
                    element = mathjaxDiv.getAscendant('div')
                    // now we have our output container at hand
                    var math = getInputSourceById(MathJax.Hub.getAllJax("MathDiv"), mathjaxId)
                    if ( math ) {
                        latexSource = math.originalText
                    } else {
                        console.log("Not found.. ")
                        // ### prevent dialog from opening up
                    }
                }
            }

            // edit or insert math-formula
            console.log(element)
            if ( !element || element.getName() != 'div') {
                console.log("Show... insert")
                this.insertMode = true
            } else {
                console.log("Show... edit")
                if (latexSource) {
                    // override verbose html generated and inserted by mathjax-renderer 
                    // replace it with our source within two dollar signs
                    console.log(element.setHtml("$$ "+ latexSource + " $$"))
                    this.insertMode = false
                } else {
                    // Oops, no latex-source.. 404
                }
            }

            this.element = element

            if ( !this.insertMode ) {
                this.setupContent( this.element )
            } else {
                this.setupContent(editor.document.createText("$$  $$"))
            }

            function getInputSourceById(elements, id) {
                for (obj in elements) {
                    var element = elements[obj]
                    if (element.inputID === id) return element
                }
                return undefined
            }

        }, onOk: function () {

            console.log("Ok...")

            var dialog = this,
                mathjaxInput = dialog.element

            if (dialog.insertMode) {

                var math = dialog.getValueOf( 'input-tab', 'mathInput' )

                var mathObjectId = MathJax.Hub.getAllJax("MathDiv").length

                // this element is our mathjax-source container
                var content = editor.document.createElement('div')
                    content.setAttribute('class', 'math-output')
                    content.setAttribute('id', 'formula-'+ mathObjectId)
                // this element gets replaced by the mathjax-renderer
                var preview = editor.document.createElement('span')
                    preview.setAttribute('class', 'math-preview')
                    preview.setText(math)
                content.append(preview)

                editor.insertElement( content )
            } else {
                dialog.commitContent( mathjaxInput )
            }

        }
    }
});
